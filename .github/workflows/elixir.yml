name: Elixir CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    name: Build & Test
    runs-on: ubuntu-latest

    services:
      db:
        image: postgres
        ports: ['5432:5432']
        env:
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    strategy:
      matrix:
        elixir: [1.10.3]
        otp: [22.3]
    steps:
    - uses: actions/checkout@v2
    - name: Set up Elixir
      uses: actions/setup-elixir@v1
      with:
        elixir-version: ${{ matrix.elixir }} # Define the elixir version [required]
        otp-version: ${{ matrix.otp }} # Define the OTP version [required]
    # - name: Restore dependencies cache
    #   uses: actions/cache@v2
    #   with:
    #     path: deps
    #     key: ${{ runner.os }}-mix-${{ hashFiles('**/mix.lock') }}
    #     restore-keys: ${{ runner.os }}-mix-
    - name: Retrieve Mix Dependencies Cache
      uses: actions/cache@v1
      id: mix-cache #id to use in retrieve action
      with:
        path: deps
        key: ${{ runner.os }}-${{ matrix.otp }}-${{ matrix.elixir }}-mix-${{ hashFiles(format('{0}{1}', github.workspace, '/mix.lock')) }}

    - name: Install Mix Dependencies
      if: steps.mix-cache.outputs.cache-hit != 'true'
      run: |
        mix local.rebar --force
        mix local.hex --force
        mix deps.get

    - name: Install dependencies
      run: mix deps.get
    - name: Run tests
      run: mix test
    - name: Check Formatting
      run: mix format --check-formatted
    - name: Run Credo
      run: mix credo --strict
